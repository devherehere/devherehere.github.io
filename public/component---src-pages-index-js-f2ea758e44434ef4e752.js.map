{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-link.js","webpack:///./src/pages/index.js"],"names":["Header","siteTitle","class","id","to","activeClass","style","height","fontSize","fontWeight","activeClassName","defaultProps","Layout","children","d","Date","data","useStaticQuery","site","siteMetadata","title","getFullYear","PostLink","post","src","alt","frontmatter","slug","href","datetime","date","IndexPage","Posts","allMarkdownRemark","edges","filter","edge","node","map","key","pageQuery"],"mappings":"gIAKMA,G,UAAS,SAAC,GAAD,EAAGC,UAAH,OACb,yBAAKC,MAAM,QAAQC,GAAG,WACpB,uBAAGD,MAAM,gCACP,kBAAC,OAAD,CAAME,GAAI,IAAKC,YAAa,gBAA5B,SAIF,uBAAGH,MAAM,gCACP,kBAAC,OAAD,CAAME,GAAI,QAASC,YAAa,gBAAhC,SAIF,uBAAGH,MAAM,gCACP,yBAAKI,MAAO,CAAEC,OAAQ,OAAQC,SAAU,OAAQC,WAAY,SAA5D,gBAIF,uBAAGP,MAAM,gCACP,kBAAC,OAAD,CAAME,GAAI,aAAcC,YAAa,gBAArC,cAIF,uBAAGH,MAAM,gCACP,kBAAC,OAAD,CAAME,GAAI,YAAaM,gBAAgB,gBAAvC,gBAWNV,EAAOW,aAAe,CACpBV,UAAU,IAGGD,QCFAY,IAnCA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVC,EAAI,IAAIC,KACRC,EAAOC,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQhB,WAAW,UAAAe,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,8BAAOP,GACP,4BAAQX,MAAM,qBACZ,yBAAKA,MAAM,8BACT,gCACKY,EAAEO,cAAe,IACpB,kBAAC,OAAD,CAAMjB,GAAI,2CAAV,kBAEQ,IAJV,4B,2DCxBV,+CAuCekB,IAnCE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,yBAAKrB,MAAM,UACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,cACT,4BAAQA,MAAM,iBACZ,yBACEsB,IAAI,oDACJC,IAAI,wBAIV,yBAAKvB,MAAM,gBACT,yBAAKA,MAAM,SACT,yBAAKA,MAAM,cACT,uBAAGA,MAAM,cACP,kBAAC,OAAD,CAAME,GAAImB,EAAKG,YAAYC,MAAOJ,EAAKG,YAAYN,QAErD,uBAAGlB,MAAM,iBACP,kBAAC,OAAD,CAAME,GAAImB,EAAKG,YAAYC,MAAOJ,EAAKG,YAAYN,SAGvD,yBAAKlB,MAAM,mBAGb,yBAAKA,MAAM,WAAX,0FAEkB,uCAFlB,KAEmC,uBAAG0B,KAAK,KAAR,eACjC,6BACA,0BAAMC,SAAS,YAAYN,EAAKG,YAAYI,Y,kCChCtD,kGAmDeC,UA9CG,SAAC,GAIZ,IACCC,EADF,EAHJhB,KACEiB,kBAAqBC,MAIpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKX,YAAYI,QACvCQ,KAAI,SAAAF,GAAI,OAAI,kBAAC,IAAD,CAAUG,IAAKH,EAAKC,KAAKlC,GAAIoB,KAAMa,EAAKC,UAEvD,OACE,kBAAC,IAAD,KACE,6BAASnC,MAAM,mCAAmCC,GAAG,iBACnD,yBAAKD,MAAM,aACT,yBAAKA,MAAM,aACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,UACT,wBAAIA,MAAM,UACV,wBAAIA,MAAM,cAEZ,yBAAKA,MAAM,UACT,yBAAKC,GAAG,QAAR,iBAMV,6BAASD,MAAM,WACb,yBAAKA,MAAM,cACT,yBAAKA,MAAM,qBAAX,UACA,yBAAKA,MAAM,YACT,yBAAKA,MAAM,WAAW8B,MAI5B,6BAAS9B,MAAM,WACb,yBAAKA,MAAM,cACT,yBAAKA,MAAM,qBAAX,SACA,yBAAKA,MAAM,YACT,yBAAKA,MAAM,WAAW8B,QAU3B,IAAMQ,EAAS","file":"component---src-pages-index-js-f2ea758e44434ef4e752.js","sourcesContent":["import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport \"./mystyles.scss\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <nav class=\"level\" id=\"top-nav\">\r\n    <p class=\"level-item has-text-centered\">\r\n      <Link to={\"/\"} activeClass={\"link is-info\"}>\r\n        Home\r\n      </Link>\r\n    </p>\r\n    <p class=\"level-item has-text-centered\">\r\n      <Link to={\"/blog\"} activeClass={\"link is-info\"}>\r\n        Blog\r\n      </Link>\r\n    </p>\r\n    <p class=\"level-item has-text-centered\">\r\n      <div style={{ height: \"30px\", fontSize: \"160%\", fontWeight: \"bold\" }}>\r\n        DEVHEREHERE\r\n      </div>\r\n    </p>\r\n    <p class=\"level-item has-text-centered\">\r\n      <Link to={\"/portfolio\"} activeClass={\"link is-info\"}>\r\n        Portfolio\r\n      </Link>\r\n    </p>\r\n    <p class=\"level-item has-text-centered\">\r\n      <Link to={\"/about-me\"} activeClassName=\"link is-info\">\r\n        About Me\r\n      </Link>\r\n    </p>\r\n  </nav>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport Header from \"./header\"\r\nimport \"./mystyles.scss\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const d = new Date()\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <main>{children}</main>\r\n      <footer class=\"footer is-warning\">\r\n        <div class=\"content has-text-centered \">\r\n          <p>\r\n            © {d.getFullYear()}{\" \"}\r\n            <Link to={\"https://www.facebook.com/akawit.panutai\"}>\r\n              Akawit Panutai\r\n            </Link>{\" \"}\r\n            All Rights Reserved\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport \"./mystyles.scss\"\r\n\r\nconst PostLink = ({ post }) => (\r\n  <div class=\"column\">\r\n    <div class=\"card\">\r\n      <div class=\"card-image\">\r\n        <figure class=\"image is-4by3\">\r\n          <img\r\n            src=\"https://bulma.io/images/placeholders/1280x960.png\"\r\n            alt=\"Placeholder image\"\r\n          />\r\n        </figure>\r\n      </div>\r\n      <div class=\"card-content\">\r\n        <div class=\"media\">\r\n          <div class=\"media-left\">\r\n            <p class=\"title is-4\">\r\n              <Link to={post.frontmatter.slug}>{post.frontmatter.title}</Link>\r\n            </p>\r\n            <p class=\"subtitle is-6\">\r\n              <Link to={post.frontmatter.slug}>{post.frontmatter.title}</Link>\r\n            </p>\r\n          </div>\r\n          <div class=\"media-content\"></div>\r\n        </div>\r\n\r\n        <div class=\"content\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec\r\n          iaculis mauris. <a>@bulmaio</a>. <a href=\"#\">#responsive</a>\r\n          <br />\r\n          <time datetime=\"2016-1-1\">{post.frontmatter.date}</time>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default PostLink\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport PostLink from \"../components/post-link\"\r\n\r\nconst IndexPage = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) => {\r\n  const Posts = edges\r\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\r\n\r\n  return (\r\n    <Layout>\r\n      <section class=\"hero is-warning is-bold is-large\" id=\"first-section\">\r\n        <div class=\"hero-body\">\r\n          <div class=\"container\">\r\n            <div class=\"columns\">\r\n              <div class=\"column\">\r\n                <h1 class=\"title\"></h1>\r\n                <h2 class=\"subtitle\"></h2>\r\n              </div>\r\n              <div class=\"column\">\r\n                <div id=\"logo\">DEV ; ) </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section class=\"section\">\r\n        <div class=\"container \">\r\n          <div class=\"title topic-title\">บทความ</div>\r\n          <div class=\"subtitle\">\r\n            <div class=\"columns\">{Posts}</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section class=\"section\">\r\n        <div class=\"container \">\r\n          <div class=\"title topic-title\">ผลงาน</div>\r\n          <div class=\"subtitle\">\r\n            <div class=\"columns\">{Posts}</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            slug\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}